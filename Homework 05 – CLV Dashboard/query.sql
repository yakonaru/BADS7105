SELECT 
	*
FROM
(SELECT 	
	SHOP_MONTH, 
	NEW_STATUS, 
	REPEAT_STATUS, 
	REACTIVATED_STATUS,  
	TOTAL , LAG(TOTAL, 1)OVER(ORDER BY SHOP_MONTH ASC) as PREVIOUS_TOTAL, 
	REPEAT_STATUS - LAG(TOTAL, 1)OVER(ORDER BY SHOP_MONTH ASC) as CHURN_STATUS
FROM
	(SELECT 
		SHOP_MONTH, 
		COUNT(CASE WHEN STATUS = 'NEW' THEN CUST_CODE ELSE NULL END) as NEW_STATUS, 
		COUNT(CASE WHEN STATUS = 'REPEAT' THEN CUST_CODE ELSE NULL END) as REPEAT_STATUS,
		COUNT(CASE WHEN STATUS = 'REACTIVATED' THEN CUST_CODE ELSE NULL END) as REACTIVATED_STATUS,
		COUNT(STATUS) as TOTAL
	FROM
		(SELECT 
            PREVIOUS_MONTH, SHOP_MONTH, CUST_CODE, 
            CASE
                WHEN DATE_DIFF(SHOP_MONTH, PREVIOUS_MONTH, MONTH) IS NULL THEN 'NEW'
                WHEN DATE_DIFF(SHOP_MONTH, PREVIOUS_MONTH, MONTH) = 1 THEN 'REPEAT'
                WHEN DATE_DIFF(SHOP_MONTH, PREVIOUS_MONTH, MONTH) > 1 THEN 'REACTIVATED'
            ELSE NULL END AS STATUS
        FROM
			(SELECT 
  				LAG(SHOP_MONTH, 1)OVER(PARTITION BY CUST_CODE ORDER BY SHOP_MONTH ASC) as PREVIOUS_MONTH, 
  				SHOP_MONTH, 
  				CUST_CODE
  			FROM
				(SELECT  
					DISTINCT DATE_TRUNC(PARSE_DATE('%Y%m%d', CAST(SHOP_DATE as STRING)),MONTH) as SHOP_MONTH,
					CUST_CODE
					FROM `crm-customer-segment.supermarket.transactions_2stores` 
					WHERE CUST_CODE IS NOT NULL
				)
			)
		)
		GROUP BY SHOP_MONTH
	)
ORDER BY SHOP_MONTH
) AS M
INNER JOIN 


(
SELECT SHOP_MONTH,
TOTAL_TRANSACTION,
TOTAL_SPEND,
LAG(TOTAL_TRANSACTION, 1)OVER(ORDER BY SHOP_MONTH ASC) as TOTAL_TRANSACTION_PREVIOUS_MONTH,
LAG(TOTAL_SPEND, 1)OVER(ORDER BY SHOP_MONTH ASC) as TOTAL_SPEND_PROD_PREVIOUS_MONTH 
FROM
(SELECT SHOP_MONTH , COUNT(*) AS TOTAL_TRANSACTION, SUM(SPEND) AS TOTAL_SPEND
from
(SELECT  
					DATE_TRUNC(PARSE_DATE('%Y%m%d', CAST(SHOP_DATE as STRING)),MONTH) as SHOP_MONTH,
                    SPEND
                    
					FROM `crm-customer-segment.supermarket.transactions_2stores` 
					WHERE CUST_CODE IS NOT NULL
) 
GROUP BY SHOP_MONTH
) 
)AS T 

 ON M.SHOP_MONTH = T.SHOP_MONTH 
 ORDER BY M.SHOP_MONTH ;





SELECT SHOP_MONTH,
PROD_CODE,
TOTAL_SPEND_PROD,
TOTAL_TRANS_PROD,
LAG(TOTAL_TRANS_PROD, 1)OVER(ORDER BY SHOP_MONTH ASC) as TOTAL_TRANS_PROD_PREVIOUS_MONTH,
LAG(TOTAL_SPEND_PROD, 1)OVER(ORDER BY SHOP_MONTH ASC) as TTOTAL_SPEND_PROD_PREVIOUS_MONTH 
FROM
(SELECT  
					DATE_TRUNC(PARSE_DATE('%Y%m%d', CAST(SHOP_DATE as STRING)),MONTH) as SHOP_MONTH, 
                    PROD_CODE,
					SUM(SPEND) as TOTAL_SPEND_PROD,
                    count(*) AS TOTAL_TRANS_PROD
					FROM `crm-customer-segment.supermarket.transactions_2stores` 
					WHERE CUST_CODE IS NOT NULL
                    group by SHOP_MONTH ,PROD_CODE
) 
ORDER BY SHOP_MONTH


SELECT SHOP_MONTH,
CUST_CODE,
TOTAL_SPEND_CUST,
TOTAL_TRANS_CUST,
LAG(TOTAL_TRANS_CUST, 1)OVER(ORDER BY SHOP_MONTH ASC) as TOTAL_TRANS_CUST_PREVIOUS_MONTH,
LAG(TOTAL_SPEND_CUST, 1)OVER(ORDER BY SHOP_MONTH ASC) as TOTAL_SPEND_CUST_PREVIOUS_MONTH 
FROM
(SELECT  
					DATE_TRUNC(PARSE_DATE('%Y%m%d', CAST(SHOP_DATE as STRING)),MONTH) as SHOP_MONTH, 
                    CUST_CODE,
					SUM(SPEND) as TOTAL_SPEND_CUST,
                    count(*) AS TOTAL_TRANS_CUST
					FROM `crm-customer-segment.supermarket.transactions_2stores` 
					WHERE CUST_CODE IS NOT NULL
                    group by SHOP_MONTH ,CUST_CODE
) 
ORDER BY SHOP_MONTH
        
